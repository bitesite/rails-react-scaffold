import React from 'react';
import { useState, useEffect } from 'react';
import ReactDOM from 'react-dom';

const <%= plural_name.camelize %>IndexPage = () => {

  const [loading, setLoading] = useState(false);
  const [<%= plural_name.camelize(:lower) %>, set<%= plural_name.camelize %>] = useState([]);

  const load<%= plural_name.camelize%> = () => {
    setLoading(true);
    <%- if options[:ajax_engine] == 'fetch' -%>
    /* Fetch coming soon */
    <%- end -%>
    <%- if options[:ajax_engine] == 'jquery' %>
    $.getJSON('/<%= plural_name %>', (results) => {
      set<%= plural_name.camelize %>(results);
      setLoading(false);
    });
    <%- end -%>
    <%- if options[:ajax_engine] == 'axios' -%>
    /* Axios coming soon */
    <%- end -%>
  };

  const destroy = (<%= singular_name.camelize(:lower) %>Id) => {
    if (confirm('Are you sure?')) {
      <%- if options[:ajax_engine] == 'fetch' -%>
      /* Fetch coming soon */
      <%- end -%>
      <%- if options[:ajax_engine] == 'jquery' -%>
        $.ajax({
          url: `/<%= plural_name %>/${<%= singular_name.camelize(:lower) %>Id}`,
          method: 'DELETE',
          success: () => {
            load<%= plural_name.camelize%>();
          },
          error: () => {},
        });
      <%- end -%>
      <%- if options[:ajax_engine] == 'axios' -%>
      /* Axios coming soon */
      <%- end -%>
    }
  }

  useEffect(() => {
    load<%= plural_name.camelize%>();
  }, []);

  return (
    <div>
      <h1><%= plural_name.titleize %></h1>

      <div>
        <a href='/<%= plural_name %>/new'>New <%= singular_name %></a>
      </div>
      {
        loading ?
          "Loading..."
        :
          <table>
            <thead>
              <tr><% viewable_attributes.each do |viewable_attribute| %>
                <th><%= viewable_attribute.name.titleize%></th><% end %>
                <th></th>
                <th></th>
                <th></th>
              </tr>
            </thead>
            <tbody>
              {
                <%= plural_name.camelize(:lower) %>.map((<%= singular_name.camelize(:lower) %>) => 
                  (
                    <tr key={<%= singular_name.camelize(:lower) %>.id}><% viewable_attributes.each do |viewable_attribute| %>
                      <td>{<%= "#{singular_name.camelize(:lower)}.#{viewable_attribute.name}" %>}</td><% end %>
                      <td><a href={`/<%= plural_name %>/${<%= singular_name.camelize(:lower) %>.id}`}>Show</a></td>
                      <td><a href={`/<%= plural_name %>/${<%= singular_name.camelize(:lower) %>.id}/edit`}>Edit</a></td>
                      <td><a href='#' onClick={(e) => { e.preventDefault(); destroy(<%= singular_name.camelize(:lower) %>.id); }}>Destroy</a></td>
                    </tr>
                  )
                )
              }
            </tbody>
          </table>
      }

    </div>
  );
};

<%- if options['use_remount'] -%>
/* REMOUNT COMING SOON */
<%- else -%>
document.addEventListener('DOMContentLoaded', () => {
  const mountPoint = document.getElementById('<%= "#{plural_name}-index-page-mount-point" %>');
  
  if(mountPoint) {
    ReactDOM.render(<<%= "#{plural_name.camelize}IndexPage" %> />, mountPoint);
  }
});
<%- end -%>