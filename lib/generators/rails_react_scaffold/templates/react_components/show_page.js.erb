import React, { useState, useEffect } from 'react';
import ReactDOM from 'react-dom';
<%- if options['use_remount'] -%>
import { define } from 'remount';
<%- else -%>
import ReactDOM from 'react-dom';
<%- end -%>

const <%= plural_name.camelize %>ShowPage = ({ <%= singular_name.camelize(:lower)%>Id }) => {

  const [loading, setLoading] = useState(true);
  const [<%= singular_name.camelize(:lower) %>, set<%= singular_name.camelize %>] = useState();

  const load<%= singular_name.camelize %> = () => {
    setLoading(true);
    const url = `/<%= plural_name %>/${<%= singular_name.camelize(:lower)%>Id}`;
    <%- if options[:ajax_engine] == 'fetch' -%>
    fetch(url, { headers: { Accept: 'application/json' } })
      .then((response) => {
        if (response.status === 200) {
          return response.json();
        }
        return undefined;
      })
      .then((responseJson) => {
        if (responseJson) {
          set<%= singular_name.camelize %>(responseJson);
        }
        setLoading(false);
      });
    <%- end -%>
    <%- if options[:ajax_engine] == 'jquery' -%>
    $.getJSON(url, (result) => {
      set<%= singular_name.camelize %>(result);
      setLoading(false);
    });
    <%- end -%>
    <%- if options[:ajax_engine] == 'axios' -%>
    /* Axios coming soon */
    <%- end -%>
  };

  useEffect(() => {
    load<%= singular_name.camelize %>();
  }, []);

  return (
    <div>
      <h1><%= singular_name.titleize %> {<%= singular_name.camelize(:lower)%>Id}</h1>
      {
        loading ?
          "Loading..."
        :
          <>
            <%- viewable_attributes.each do |viewable_attribute| -%>
            <p>
              <b><%= viewable_attribute.name.titleize %></b>: {<%= "#{singular_name.camelize(:lower)}.#{viewable_attribute.name}" %>}
            </p>
            <%- end -%>
          </>
      }
      <div>
        <a href="/<%= plural_name %>">Back to <%= plural_name %></a>
      </div>
    </div>
  );
};

<%- if options['use_remount'] -%>
define({ '<%= "#{plural_name.dasherize}-show-page" %>': <%= "#{plural_name.camelize}ShowPage" %> });
<%- else -%>
document.addEventListener('DOMContentLoaded', () => {
  const mountPoint = document.getElementById('<%= "#{plural_name}-show-page-mount-point" %>');
  
  if(mountPoint) {
    const <%= singular_name %>Id = parseInt(mountPoint.dataset.<%= singular_name.camelize(:lower) %>Id);
    ReactDOM.render(<<%= "#{plural_name.camelize}ShowPage" %> <%= singular_name %>Id={<%= singular_name %>Id} />, mountPoint);
  }
});
<%- end -%>